if(NOT TARGET nd)
  include(@CMAKE_CURRENT_BINARY_DIR@/nd-config-targets.cmake)
endif()

set(ND_INCLUDE_DIR @CMAKE_CURRENT_SOURCE_DIR@)
set(ND_LIBRARY nd)

find_package(CUDA 4.0)
if(NOT CUDA_FOUND)
  set(CUDA_LIBRARIES) #clear this if it's not found
endif()
### Windows shell lightweight utility functions - for plugin search
message(STATUS "Configuring nd from the build tree at @CMAKE_CURRENT_BINARY_DIR@.")
if(WIN32)  
  find_library(SHLWAPI Shlwapi.lib) 
else()
  set(SHLWAPI)
endif()

message(STATUS "Configuring nd from the build tree  at @CMAKE_CURRENT_BINARY_DIR@.")

set(ND_INCLUDE_DIRS   "${ND_INCLUDE_DIR}" "${CUDA_INCLUDE_DIRS}")
set(ND_LIBRARIES      "${ND_LIBRARY}" "${CUDA_LIBRARIES}" "${SHLWAPI}")

### Handle components
# component name and the imported target must be the same
foreach(package ${ND_FIND_COMPONENTS})
  find_package(${package} PATHS .)
  if(${package}_FOUND)
    get_property(plugin TARGET ${package} PROPERTY LOCATION)
    if(plugin) ## should remove this when I add config files for the plugins?
      set(ND_${package}_FOUND TRUE)
    endif()
    install(FILES ${plugin}           DESTINATION bin/plugins)
    install(FILES ${${package}-EXTRAS} DESTINATION bin/plugins)
  endif()
endforeach()

### Check everything got found
find_package_handle_standard_args(ND
  REQUIRED_VARS
    ND_LIBRARIES
    ND_INCLUDE_DIRS
  HANDLE_COMPONENTS
)

### macro for copying plugins to a target's build Location
# component name and the imported target must be the same
#
# plugins should define an "Extras" variable named <plugin>-EXTRAS
# that has an extra files (eg associated shared libraries) to be copied
# along side the plugin.
function(nd_copy_plugins_to_target _target _plugins)
    list(REMOVE_AT ARGV 0)
    foreach(package ${ARGV})      
      if(NOT TARGET ${package})
        find_package(${package} PATHS .)
      endif()
      if(TARGET ${package})
        get_property(plugin TARGET ${package} PROPERTY LOCATION)
        if(plugin)
          message(STATUS "Configuring ${package} to be copied to build path for ${_target}.")
          add_custom_command(TARGET ${_target} POST_BUILD
            COMMAND ${CMAKE_COMMAND} -E make_directory $<TARGET_FILE_DIR:${_target}>/plugins/
            COMMAND ${CMAKE_COMMAND} -E copy
                ${plugin}
                $<TARGET_FILE_DIR:${_target}>/plugins
                COMMENT "Copying ${package} to build path for ${_target}."
                )
          add_dependencies(${_target} ${package})
          # extras
          if(${package}-EXTRAS)
            message(STATUS "Configuring ${package} extras to be copied to build path for ${_target}.")
            foreach(extra ${${package}-EXTRAS})
            add_custom_command(TARGET ${_target} POST_BUILD
                COMMAND ${CMAKE_COMMAND} -E make_directory $<TARGET_FILE_DIR:${_target}>/plugins/
                COMMAND ${CMAKE_COMMAND} -E copy
                    ${extra}
                    $<TARGET_FILE_DIR:${_target}>/plugins
                    COMMENT "Copying ${extra} to build path for ${_target}."
                    )           
            endforeach()
          endif()
        endif()
      endif()
    endforeach()
endfunction()
